# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]

jobs:
  build:
    name: Test and Build

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Personal Environment
      run: |
        case "${{ github.actor_id }}" in
          "${{ secrets.USER1_ID }}") DB_PORT=${{ secrets.USER1_DB_PORT }}
          ;;
          "${{ secrets.USER2_ID }}") DB_PORT=${{ secrets.USER2_DB_PORT }}
          ;;
          "${{ secrets.USER3_ID }}") DB_PORT=${{ secrets.USER3_DB_PORT }}
          ;;
          "${{ secrets.USER4_ID }}") DB_PORT=${{ secrets.USER4_DB_PORT }}
          ;;
        esac
        DDL_AUTO=create

    - name: Setup application.yml
      run: |
        mkdir -p src/main/resources
        echo "${{ secrets.MAIN_APPLICATION_YML }}" | base64 --decode > src/main/resources/application.yml
        mkdir -p src/test/resources
        echo "${{ secrets.TEST_APPLICATION_YML }}" | base64 --decode > src/test/resources/application.yml

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Test with Gradle
      run: ./gradlew test

    - name: Setup Distribution Environment
      run: |
        DB_PORT=${{ secrets.DIST_DB_PORT }}

    - name: Build with Gradle Wrapper
      run: ./gradlew build -x test

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: docker hub login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME}}/${{ secrets.DOCKERHUB_REPOSITORY }}:v${{ github.run_number }}

  deploy:
    needs: build
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          port: ${{ secrets.REMOTE_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            ${{ secrets.PATH_TO_DOCKER }} pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.REPOSITORY }}
            ${{ secrets.PATH_TO_DOCKER }} run -p ${{ secrets.DOCKER_PORT }} -d ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.REPOSITORY }}